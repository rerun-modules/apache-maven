#!/usr/bin/env bash
#
#/ command: apache-maven:build: "build and package the apache-maven distribution"
#
#/ usage: rerun apache-maven:build [options]
#
#/ rerun env variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option variables: 

# Read module function library.
. $RERUN_MODULE_DIR/lib/functions.sh || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Parse the command options.
[[ -r $RERUN_MODULE_DIR/commands/build/options.sh ]] && {
    . $RERUN_MODULE_DIR/commands/build/options.sh || rerun_die "Failed loading options parser."
    rerun_options_parse "$@"
}


# Error handling
# ---------------
# * Trap calls `rerun_die` with standard message.
# * Exit upon command errors or accessing unset variables.
#   * See [set](http://ss64.com/bash/set.html)
trap 'rerun_die "*** command failed: apache-maven:build. ***"' ERR
set -o nounset -o pipefail


# ------------------------------
# Your implementation goes here.
# ------------------------------


buildrpm() {
  if [[ ! -e $DIRECTORY/SOURCES/apache-maven-${VERSION}.zip ]]
  then
    # Download the specified version from the downloads site:

    mkdir -p $DIRECTORY/SOURCES

    #
    # wget, who needs it?
    #
    if [ ! -r $DIRECTORY/SOURCES/apache-maven-${VERSION}.zip ]
    then
       curl -s -k -f -o $DIRECTORY/SOURCES/apache-maven-${VERSION}.zip  ${URL}/${VERSION}/binaries/apache-maven-${VERSION}-bin.zip || rerun_die "Unable to download artifact: ${URL}/${VERSION}/binaries/apache-maven-${VERSION}-bin.zip"
    fi
  fi

   rerun rpm:build -n apache-maven -v $VERSION -r $RELEASE -t $DIRECTORY
}

case $FORMAT in
  rpm)
    buildrpm
    ;;
  *)
    rerun_die "invalid package format \"$FORMAT\""
    ;;
esac

exit $?


# Done
